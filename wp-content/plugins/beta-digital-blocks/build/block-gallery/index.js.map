{"version":3,"file":"block-gallery/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAqC;AACgH;AACrJ;AAC+E;AAEhE,SAASY,IAAIA,CAAAC,IAAA,EAAkC;EAAA,IAAhC;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAAF,IAAA;EAC1D,MAAMG,cAAc,GAAG,CAAC,cAAc,CAAC;EACpC,MAAMC,QAAQ,GAAG,CACb,CAAC,cAAc,EAAE;IACbC,SAAS,EAAE,mBAAmB;IACvCC,KAAK,EAAE;EACF,CAAC,CAAC,CAAC;EAGV,OACCC,iEAAA,QAAUf,sEAAa,EAAE,EACxBe,iEAAA,CAAClB,gEAAW;IACCmB,aAAa,EAAEL,cAAe;IAC9BM,QAAQ,EAAEL;EAAS,EACrB,CAEN;AAGR;;;;;;;;;;;;;;;;;;;ACxBkE;AAEnD,SAASM,IAAIA,CAAAV,IAAA,EAAmB;EAAA,IAAjB;IAAEC;EAAW,CAAC,GAAAD,IAAA;EAC3C,MAAMW,UAAU,GAAGnB,uEAAkB,EAAE;EAEvC,OACCe,iEAAA,QAAUI,UAAU,EACnBJ,iEAAA,cACCA,iEAAA;IAAKK,GAAG,EAAEX,UAAU,CAACY,QAAS;IAACC,GAAG,EAAEb,UAAU,CAACc;EAAS,EAAG,CACtD,CACD;AAER;;;;;;;;;;ACZA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;ACNqC;AACiB;AACA;AACE;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AAC0B;AACA;AACU;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACAC,oEAAiB,CAAEC,6CAAa,EAAE;EACjC;AACD;AACA;EACCE,IAAI,EAAEpB,6CAAI;EAEV;AACD;AACA;EACCW,IAAI,EAAEA,CAAA,KAAMH,iEAAA,CAAClB,wEAAmB;AACjC,CAAC,CAAE,C","sources":["webpack://beta-digital-blocks/./src/block-gallery/edit.js","webpack://beta-digital-blocks/./src/block-gallery/save.js","webpack://beta-digital-blocks/external window [\"wp\",\"blockEditor\"]","webpack://beta-digital-blocks/external window [\"wp\",\"blocks\"]","webpack://beta-digital-blocks/external window [\"wp\",\"components\"]","webpack://beta-digital-blocks/external window [\"wp\",\"element\"]","webpack://beta-digital-blocks/external window [\"wp\",\"i18n\"]","webpack://beta-digital-blocks/webpack/bootstrap","webpack://beta-digital-blocks/webpack/runtime/compat get default export","webpack://beta-digital-blocks/webpack/runtime/define property getters","webpack://beta-digital-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://beta-digital-blocks/webpack/runtime/make namespace object","webpack://beta-digital-blocks/./src/block-gallery/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { InspectorControls, InnerBlocks, BlockControls, MediaPlaceholder, useBlockProps, RichText, MediaReplaceFlow } from '@wordpress/block-editor';\n//import './editor.scss';\nimport { TextControl, Card, CardBody, CardMedia } from '@wordpress/components';\n\nexport default function Edit( { attributes, setAttributes } ) {\n\tconst ALLOWED_BLOCKS = ['core/gallery'];\n    const TEMPLATE = [\n        ['core/gallery', {\n            className: 'bd-block__gallery',\n\t\t\talign: 'full',\n        }]];\n\n\n\treturn (\n\t\t<div { ...useBlockProps() }>\n\t\t\t<InnerBlocks\n                allowedBlocks={ALLOWED_BLOCKS}\n                template={TEMPLATE}\n            />\n\n\t\t</div>\n\n\t);\n}\n\n","import { useBlockProps, RichText } from '@wordpress/block-editor';\n\nexport default function save( { attributes } ) {\n\tconst blockProps = useBlockProps.save();\n\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t<div>\n\t\t\t\t<img src={attributes.imageUrl} alt={attributes.imageAlt} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { __ } from '@wordpress/i18n';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { InnerBlocks } from '@wordpress/block-editor';\nimport { useBlockProps } from '@wordpress/block-editor';\n\n// /**\n//  * Block Name.\n//  * Create an example Call to Action Block\n//  * Uses InnerBlocks for editable content within.\n//  */\n// import metadata from './block.json';\n// import { BLOCK_CONFIG } from './variations';\n// export const blockName = 'block-call-to-action';\n\n// wp.blocks.registerBlockVariation('core/cover', {\n//     name: 'cover-variation',\n//     title: 'Cover Variation',\n// \tcategory: 'beta-digital-category',\n//     icon: 'star-filled',\n//     attributes: {\n//         className: 'is-awesome',\n//         align: 'full'\n//     }\n// });\n// // Register the block via WP func. Change 'myplugin' to your plugin or theme.\n// registerBlockType(`beta-digital/${blockName}`, {\n// \ttitle: __('Call to Action', 'locale'), // Change 'locale' to your locale for internationalization.\n// \tdescription: __(\n// \t\t'Call to action block with headline and buttons',\n// \t\t'locale'\n// \t),\n\n// \tcategory: 'beta-digital-category',\n// \tsupports: {\n// \t\tanchor: true,\n// \t\tdefaultStylePicker: false,\n// \t\thtml: false,\n// \t\talign: false,\n// \t},\n// \tattributes: {\n// \t\tanchor: {\n// \t\t\ttype: 'string',\n// \t\t\tdefault: '',\n// \t\t},\n// \t},\n// \ttransforms: {},\n// \tvariations: [],\n// \tedit: (props) => {\n// \t\tconst blockProps = useBlockProps({\n// \t\t\tclassName: `wp-block-myplugin-${blockName}`,\n// \t\t});\n\n// \t\treturn (\n// \t\t\t<div {...blockProps}>\n// \t\t\t\t<div className=\"cta__inner\">\n// \t\t\t\t\t<div className=\"cta__inner-blocks-wrapper\">\n// \t\t\t\t\t\t<InnerBlocks\n// \t\t\t\t\t\t\ttemplate={BLOCK_CONFIG.CTA_TEMPLATE}\n// \t\t\t\t\t\t\tallowedBlocks={BLOCK_CONFIG.ALLOWED_BLOCKS}\n// \t\t\t\t\t\t\trenderAppender={false}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t);\n// \t},\n// \tsave: () => {\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t<div className=\"cta__inner\">\n// \t\t\t\t\t<InnerBlocks.Content />\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t);\n// \t},\n// });\n\n// import { registerBlockType } from '@wordpress/blocks';\n// import './style.scss';\n\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\n// wp.blocks.registerBlockVariation(\n// \t'core/gallery',\n// \t{\n// \t\tname: 'beta-digital-gallery-variation',\n// \t\ttitle: 'Frame Style Gallery',\n// \t\ticon: 'star-filled',\n// \t\tisDefault: true,\n// \t\tcategory: 'beta-digital-category'\n// \t}\n// );\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave: () => <InnerBlocks.Content />,\n} );\n\n"],"names":["__","InspectorControls","InnerBlocks","BlockControls","MediaPlaceholder","useBlockProps","RichText","MediaReplaceFlow","TextControl","Card","CardBody","CardMedia","Edit","_ref","attributes","setAttributes","ALLOWED_BLOCKS","TEMPLATE","className","align","createElement","allowedBlocks","template","save","blockProps","src","imageUrl","alt","imageAlt","registerBlockType","metadata","name","edit","Content"],"sourceRoot":""}